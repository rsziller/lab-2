Grammar

    0 $accept: line $end

    1 line: bexpr '\n'
    2     | '\n'

    3 bexpr: bexpr '&' bterm
    4      | bterm

    5 bterm: bterm '|' bfactor
    6      | bfactor

    7 bfactor: '~' bfactor
    8        | '(' bexpr ')'
    9        | TRUE
   10        | FALSE


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2
'&' (38) 3
'(' (40) 8
')' (41) 8
'|' (124) 5
'~' (126) 7
error (256)
TRUE (258) 9
FALSE (259) 10


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
line (12)
    on left: 1 2, on right: 0
bexpr (13)
    on left: 3 4, on right: 1 3 8
bterm (14)
    on left: 5 6, on right: 3 4 5
bfactor (15)
    on left: 7 8 9 10, on right: 5 6 7


state 0

    0 $accept: . line $end

    TRUE   shift, and go to state 1
    FALSE  shift, and go to state 2
    '~'    shift, and go to state 3
    '\n'   shift, and go to state 4
    '('    shift, and go to state 5

    line     go to state 6
    bexpr    go to state 7
    bterm    go to state 8
    bfactor  go to state 9


state 1

    9 bfactor: TRUE .

    $default  reduce using rule 9 (bfactor)


state 2

   10 bfactor: FALSE .

    $default  reduce using rule 10 (bfactor)


state 3

    7 bfactor: '~' . bfactor

    TRUE   shift, and go to state 1
    FALSE  shift, and go to state 2
    '~'    shift, and go to state 3
    '('    shift, and go to state 5

    bfactor  go to state 10


state 4

    2 line: '\n' .

    $default  reduce using rule 2 (line)


state 5

    8 bfactor: '(' . bexpr ')'

    TRUE   shift, and go to state 1
    FALSE  shift, and go to state 2
    '~'    shift, and go to state 3
    '('    shift, and go to state 5

    bexpr    go to state 11
    bterm    go to state 8
    bfactor  go to state 9


state 6

    0 $accept: line . $end

    $end  shift, and go to state 12


state 7

    1 line: bexpr . '\n'
    3 bexpr: bexpr . '&' bterm

    '&'   shift, and go to state 13
    '\n'  shift, and go to state 14


state 8

    4 bexpr: bterm .
    5 bterm: bterm . '|' bfactor

    '|'  shift, and go to state 15

    $default  reduce using rule 4 (bexpr)


state 9

    6 bterm: bfactor .

    $default  reduce using rule 6 (bterm)


state 10

    7 bfactor: '~' bfactor .

    $default  reduce using rule 7 (bfactor)


state 11

    3 bexpr: bexpr . '&' bterm
    8 bfactor: '(' bexpr . ')'

    '&'  shift, and go to state 13
    ')'  shift, and go to state 16


state 12

    0 $accept: line $end .

    $default  accept


state 13

    3 bexpr: bexpr '&' . bterm

    TRUE   shift, and go to state 1
    FALSE  shift, and go to state 2
    '~'    shift, and go to state 3
    '('    shift, and go to state 5

    bterm    go to state 17
    bfactor  go to state 9


state 14

    1 line: bexpr '\n' .

    $default  reduce using rule 1 (line)


state 15

    5 bterm: bterm '|' . bfactor

    TRUE   shift, and go to state 1
    FALSE  shift, and go to state 2
    '~'    shift, and go to state 3
    '('    shift, and go to state 5

    bfactor  go to state 18


state 16

    8 bfactor: '(' bexpr ')' .

    $default  reduce using rule 8 (bfactor)


state 17

    3 bexpr: bexpr '&' bterm .
    5 bterm: bterm . '|' bfactor

    '|'  shift, and go to state 15

    $default  reduce using rule 3 (bexpr)


state 18

    5 bterm: bterm '|' bfactor .

    $default  reduce using rule 5 (bterm)
